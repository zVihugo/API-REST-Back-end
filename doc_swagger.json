{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API REST - Gerenciadora de padarias",
    "description": "A API REST desenvolvida é uma solução abrangente que oferece operações CRUD (Create, Read, Update, Delete) para gerenciar usuários, administradores, padarias e produtos. Projetada para ser robusta e escalável, a API proporciona uma estrutura eficiente para manipular dados relacionados a diferentes entidades em um ambiente de gerenciamento de padarias."
  },
  "host": "localhost:3500",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/teste": {
      "get": {
        "description": "Rota construída apenas para teste incial da API.",
        "responses": {
          "200": {
            "description": "Retorna uma mensagem de boas vindas a API."
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "Rota principal de acesso.",
        "responses": {
          "200": {
            "description": "Retorna uma mensagem de boas vindas a rota de acesso."
          }
        }
      }
    },
    "/registrar": {
      "post": {
        "description": "Rota POST para registrar usuário ou administrador.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Se registrar administrador: 'Joao@admin'. Se registrar usuário: 'Joao da Silva'. "
                },
                "senha": {
                  "example": "abc123"
                },
                "confirmeSenha": {
                  "example": "abc123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Administrador ou Usuário criado com sucesso."
          },
          "400": {
            "description": "Nome não informado."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Rota POST para efetuar o login do Usuário ou Administrador registrados.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Se administrador, inserir o nome registrado: 'Joao@admin'. Se usuário, inserir o nome registrado: 'Joao da Silva'."
                },
                "senha": {
                  "example": "abc123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login realizado com sucesso. Usuário e Administrador recebem o Token jwt."
          },
          "400": {
            "description": "Usuário não encontrado."
          }
        }
      }
    },
    "/admin": {
      "post": {
        "description": "Rota para validar usuário ou administrador com a autenticação do Token recebido no Login.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Se nome for: 'Joao@admin', Adminstrador será criado, se não, o acesso será negado."
                },
                "senha": {
                  "example": "abc123"
                },
                "confirmeSenha": {
                  "example": "abc123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Administrador criado com sucesso."
          },
          "400": {
            "description": "Nome, senha e confirme senha inválidos."
          },
          "401": {
            "description": "Autenticação necessária."
          },
          "403": {
            "description": "Acesso negado."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/visualizar/{id}": {
      "get": {
        "description": "Rota para visualizar se isAuth está de funcionando. Necessita do ID e do token para verificar.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Teste OK"
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Acesso negado."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/excluir/{id}": {
      "delete": {
        "description": "Rota para excluir usuários e administradores.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário ou Adminstrador excluído com sucesso."
          },
          "400": {
            "description": "Registros excluídos ou não encontrados."
          },
          "401": {
            "description": "Autenticação necessária."
          },
          "403": {
            "description": "Acesso negado."
          }
        }
      }
    },
    "/alterar/{id}": {
      "put": {
        "description": "Rota para alterar os dados.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Alterar nome: 'Joao Paulo da Silva'."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alterado com sucesso."
          },
          "400": {
            "description": "ID não informado."
          },
          "401": {
            "description": "Token incorreto."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/": {
      "get": {
        "description": "Rota principal de acesso ao operador de padaria e produto.",
        "responses": {
          "200": {
            "description": "Retorna uma mensagem de boas vindas."
          }
        }
      }
    },
    "/principal/verTodos": {
      "get": {
        "description": "Rota de listagem de todos as padarias e produtos cadastrados.",
        "responses": {
          "200": {
            "description": "Retorna padarias e produtos inseridos no banco de dados."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/criarPadaria": {
      "post": {
        "description": "Rota de criar padaria.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Padaria do Joao"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Padaria criada com sucesso."
          },
          "400": {
            "description": "Padaria já cadastrada ou não informada."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/criarProduto": {
      "post": {
        "description": "Rota para criar produtos.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Produto A"
                },
                "preco": {
                  "example": "10"
                },
                "padariaNome": {
                  "example": "Padaria do Joao"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Produto criado com sucesso."
          },
          "400": {
            "description": "Produto não encontrado ou não inserido ou incorreto."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/buscarPadaria/{id}": {
      "get": {
        "description": "Rota para visualizar Padaria cadastrada.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Padaria encontrada."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/buscarProduto/{id}": {
      "get": {
        "description": "Rota para visualizar Produto cadastrado na Padaria.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto encontrado."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/atualizarPadaria/{id}": {
      "put": {
        "description": "Rota para atualizar nome da Padaria.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Padaria do Joaozinho"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alterado com sucesso."
          },
          "400": {
            "description": "Padaria não encontrada ou dados inseridos incorretos."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/atualizarProduto/{id}": {
      "put": {
        "description": "Rota para atualizar nome e preço do produto.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "example": "Produto A+"
                },
                "preco": {
                  "example": "30"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto atualizado com sucesso."
          },
          "400": {
            "description": "Produto não encontrado ou não inserido ou incorreto."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/deletarPadaria/{id}": {
      "delete": {
        "description": "Rota para deletar padaria.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Padaria deletada com sucesso."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/deletarProduto/{id}": {
      "delete": {
        "description": "Rota para deletar produto.",
        "parameters": [
          {
            "name": "ID gerado pelo banco de dados.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto deletado com sucesso."
          },
          "401": {
            "description": "Token inválido ou não inserido corretamente."
          },
          "403": {
            "description": "Token expirado ou inválido."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/produtoCaro/{preco}": {
      "get": {
        "description": "Rota de regra de negócio para buscar os Produtos cujo preço seja maior que o preço digitado pelo Usuário.",
        "parameters": [
          {
            "name": "preco",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retornará a lista de produtos maiores que 20, por exemplo."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    },
    "/principal/listarPadarias": {
      "get": {
        "description": "Rota de Listar as Padarias de forma paginada. OBS: limite e página para busca, devem ser passador por query.",
        "parameters": [
          {
            "name": "limite = 5",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pagina = 1",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retornará a lista padarias de forma paginada."
          },
          "500": {
            "description": "Erro ao Listar padarias."
          }
        }
      }
    },
    "/principal/listarProdutos": {
      "get": {
        "description": "Rota de Listar os produtos de forma paginada. OBS: limite e página para busca, devem ser passador por query.",
        "parameters": [
          {
            "name": "limite = 5",
            "in": "query",
            "type": "string"
          },
          {
            "name": "pagina = 1",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retornará a lista de produtos de forma paginada."
          },
          "500": {
            "description": "Erro ao Listar produtos."
          }
        }
      }
    },
    "/install/": {
      "get": {
        "description": "Rota para inserir os dados automaticamente no banco de dados..",
        "responses": {
          "200": {
            "description": "Banco de dados instalado com sucesso."
          },
          "500": {
            "description": "Erro no servidor."
          }
        }
      }
    }
  }
}